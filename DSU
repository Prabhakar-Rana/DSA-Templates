class dsu{
    vector<int>rank,parent;
    public:
    dsu(int n){
        rank.resize(n+1,0);
        parent.resize(n+1);
        for(int i=0;i<=n;i++){
            parent[i]=i;
        }
    }
    int findPar(int node){
        if(node==parent[node]) return node;
        return parent[node]=findPar(parent[node]);
    }
    void unionByRank(int u,int v){
        int a=findPar(u);
        int b=findPar(v);
        if(a==b) return;
        if(rank[a]<rank[b]){
            parent[a]=b;
        } else if(rank[a]>rank[b]){
            parent[b]=a;
        } else{
            parent[b]=a;
            rank[a]++;
        }
    }
};
