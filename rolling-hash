                                       //It return hash value of subtring form (i to j)

#define mod 1000000007
#define po 31
vector<long long>dp;
vector<long long>inv;
long long power(int a, int b) {               
    if (b == 0) return 1;
    long long res = power(a, b/2);
    res = (res * res) % mod;
    if (b % 2 == 1) {
        res = (res * a) % mod;
    }
    return res;
}
long long hash_val(int i,int j){
  long long res = dp[j];
  if(i>0) res=dp[j]-dp[i-1]+mod;
  res = (res*inv[i])%mod;
  return res;
}
void fun(string s){
  int n=s.size();
  dp.resize(n);
  inv.resize(n);
  dp[0]=(s[0]-'a')+1;
  inv[0]=1;
  long long p=1;
  for(int i=1;i<n;i++){
    char ch = s[i];
    p = (p*po)%mod;
    inv[i] = power(p,mod-2);
    dp[i] = (dp[i-1] + (ch-'a'+1)*p)%mod;
  }
}
